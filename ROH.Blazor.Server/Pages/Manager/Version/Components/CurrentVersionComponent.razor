@namespace Manager.Version.Components
@using Newtonsoft.Json;
@using ROH.StandardModels.Version
@using ROH.Blazor.Server.Api;
@using Components;

<CardComponent Header="Current Version">
    @if (isLoadingCurrentVersion)
    {
        <div style="text-align:center">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only"></span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-sm-4">
                <label for="Release">Version:</label>
            </div>
            <div class="col-sm-8">
                <input type="number" id="Release" class="form-control" @bind="currentVersion.Version" readonly />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <label for="Release">Release:</label>
            </div>
            <div class="col-sm-8">
                <input type="number" id="Release" class="form-control" @bind="currentVersion.Release" readonly />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <label for="Release">Review:</label>
            </div>
            <div class="col-sm-8">
                <input type="number" id="Release" class="form-control" @bind="currentVersion.Review" readonly />
            </div>
        </div>
    }

</CardComponent>

@code {
    private readonly VersionService _versionService = new VersionService();

    private bool isLoadingCurrentVersion = true;

    private GameVersionModel currentVersion = new()
        {
            Version = 0,
            Release = 0,
            Review = 0
        };

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        await GetCurrentVersion();
    }

    private async Task GetCurrentVersion()
    {
        isLoadingCurrentVersion = true;
        var currentVersionResponse = await _versionService.GetCurrentVersion();

        if (currentVersionResponse != null && currentVersionResponse?.ObjectResponse != null)
        {
            currentVersion = JsonConvert.DeserializeObject<GameVersionModel>(currentVersionResponse.ObjectResponse.ToString());
        }
        isLoadingCurrentVersion = false;
        StateHasChanged();
    }
}
